
server.port=51520
spring.application.name=config-server
#
##==================================================================
#
##注册中心的访问地址
eureka.client.serviceUrl.defaultZone=http://localhost:51500/eureka/
##eureka.client.serviceUrl.defaultZone=http://localhost:1111/eureka/
#
##eureka.instance.prefer-ip-address=true
eureka.instance.instanceId=${spring.application.name}:${server.port}
##===================================================================


#============bus相关配置===
#主要是kafka和zookeeper的访问地址
spring.cloud.stream.kafka.binder.brokers=172.16.8.87:9092,172.16.8.87:9093,172.16.8.87:9094
spring.cloud.stream.kafka.binder.zkNodes=172.16.8.86:2181

spring.cloud.config.discovery.enabled=true  
spring.cloud.config.discovery.serviceId=config-server
spring.cloud.config.failFast=true
spring.cloud.bus.trace.enabled=true
management.security.enabled=false


#========================
#swagger.enabled=是否启用swagger，默认：true
#- swagger.title=标题
#- swagger.description=描述
#- swagger.version=版本
#- swagger.license=许可证
#- swagger.licenseUrl=许可证URL
#- swagger.termsOfServiceUrl=服务条款URL
#- swagger.contact.name=维护人
#- swagger.contact.url=维护人URL
#- swagger.contact.email=维护人email
#- swagger.base-package=swagger扫描的基础包，默认：全扫描
#- swagger.base-path=需要处理的基础URL规则，默认：/**
#- swagger.exclude-path=需要排除的URL规则，默认：空
#- swagger.host=文档的host信息，默认：空
#- swagger.globalOperationParameters[0].name=参数名
#- swagger.globalOperationParameters[0].description=描述信息
#- swagger.globalOperationParameters[0].modelRef=指定参数类型
#- swagger.globalOperationParameters[0].parameterType=指定参数存放位置,可选header,query,path,body.form
#- swagger.globalOperationParameters[0].required=指定参数是否必传，true,false
swagger.enabled=true

swagger.title=spring-boot-starter-swagger
swagger.description=Starter for swagger 2.x
swagger.version=1.4.0.RELEASE
swagger.license=Apache License, Version 2.0
swagger.licenseUrl=https://www.apache.org/licenses/LICENSE-2.0.html
swagger.termsOfServiceUrl=https://github.com/dyc87112/spring-boot-starter-swagger
swagger.contact.name=didi
swagger.contact.url=http://blog.didispace.com
swagger.contact.email=dyc87112@qq.com
swagger.base-package=com.didispace
swagger.base-path=/**
swagger.exclude-path=/error, /ops/**

swagger.globalOperationParameters[0].name=name one
swagger.globalOperationParameters[0].description=some description one
swagger.globalOperationParameters[0].modelRef=string
swagger.globalOperationParameters[0].parameterType=header
swagger.globalOperationParameters[0].required=true
swagger.globalOperationParameters[1].name=name two
swagger.globalOperationParameters[1].description=some description two
swagger.globalOperationParameters[1].modelRef=string
swagger.globalOperationParameters[1].parameterType=body
swagger.globalOperationParameters[1].required=false

#==============

spring.profiles.active=native
#spring.cloud.config.server .native.searchLocations = classpath:/

#spring.cloud.config.server.git.uri：配置git仓库位置
#spring.cloud.config.server.git.searchPaths：配置仓库路径下的相对搜索位置，可以配置多个
#spring.cloud.config.server.git.username：访问git仓库的用户名
#spring.cloud.config.server.git.password：访问git仓库的用户密码
#spring.cloud.config.server.git.uri: file://${user.home}/config-repo

#Spring Cloud Config也提供本地存储配置的方式。我们只需要设置属性\
#  spring.profiles.active=native，\
#  Config Server会默认从应用的src/main/resource目录下检索配置文件。\
#  也可以通过spring.cloud.config.server.native.searchLocations=file:F:/properties/
#  属性来指定配置文件的位置。虽然Spring Cloud Config提供了这样的功能，\
#  但是为了支持更好的管理内容和版本控制的功能，还是推荐使用git的方式。

#注意
#记住使用file:前缀的文件资源（缺省没有前缀通常是classpath）。\
#  与任何Spring Boot配置一样，您可以嵌入${}样式的环境占位符，但请记住，Windows中的绝对路径需要额外的“/”，\
#  例如file:///${user.home}/config-repo
#警告
#searchLocations的默认值与本地Spring Boot应用程序（所以[classpath:/, classpath:/config, file:./, file:./config]）相同\
#  。这不会将application.properties从服务器暴露给所有客户端，因为在发送到客户端之前，\
#  服务器中存在的任何属性源都将被删除。
#小费
#文件系统后端对于快速入门和测试是非常好的。要在生产中使用它，您需要确保文件系统是可靠的，
#并在配置服务器的所有实例中共享。