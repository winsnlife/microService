    buildscript {//不能包含在subprojects/allprojects中
        ext {
//            springBootVersion = '1.5.4.RELEASE'
            springBootVersion = '1.5.9.RELEASE'
//            springBootVersion = '2.0.0.M6'
        }
        repositories {
            mavenLocal()
//            mavenCentral()
            maven { url "${nexusBaseUrl}/repository/maven-public/" }
            //非正式版只有这些库有
            maven { url 'http://repo.spring.io/snapshot' }
            maven { url "https://repo.spring.io/libs-milestone" }
        }
        dependencies {
            classpath("io.spring.gradle:dependency-management-plugin:1.0.3.RELEASE")
            classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        }
    }

    task wrapper(type: Wrapper) {
        gradleVersion = 4.3
    }

    group 'com.hfzy.ihk'
    version '1.0'

    ext {
//            springCloudVersion = 'Finchley.M4'
        springCloudVersion = 'Edgware.RELEASE'
//            springCloudVersion = 'Dalston.SR4'
    }

    subprojects {

        apply plugin: 'java'
        apply plugin: 'eclipse'
        apply plugin: "idea"
        apply plugin: 'org.springframework.boot'
        apply plugin: 'io.spring.dependency-management'
        apply plugin: "maven-publish"



        dependencyManagement {
            imports {
                mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
            }
        }

        group 'com.hfzy.ihk'
        version '1.0'

//        configurations{
////	all*.exclude group: 'ch.qos.logback'
//            all*.exclude module: 'spring-boot-starter-logging'
//            all*.exclude module: 'logback-classic'
//            all*.exclude module: 'log4j-over-slf4j'
//        }

        repositories {
            mavenLocal()
//            mavenCentral()
            maven { url "${nexusBaseUrl}/repository/maven-public/" }
            //非正式版只有这些库有
            maven { url 'http://repo.spring.io/snapshot' }
            maven { url "https://repo.spring.io/libs-milestone" }
        }

        dependencies {
            compile('org.springframework.boot:spring-boot-starter')
//            compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.6.1'
//            compile group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.6.1'
            testCompile('org.springframework.boot:spring-boot-starter-test')
        }


        compileJava.options.incremental = true
        compileJava.options.encoding = 'UTF-8'

        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8

        publishing {
            publications {
                maven(MavenPublication) {
                    groupId project.group
                    artifactId project.name
                    version project.version
                    //若是war包，就写components.web,若是jar包，就写components.java
                    from components.java
                }
            }
            repositories {
                maven {
                    url = "${nexusBaseUrl}/repository/maven-releases/"
                    //如果为快照版本发布到Maven Nexus私服的快照库
                    if (project.version.endsWith("-SNAPSHOT")) {
                        url = "${nexusBaseUrl}/repository/maven-snapshots/"
                    }

                    credentials {
                        username "${nexusUsername}"
                        password "${nexusPassword}"
                    }
                }
            }
        }

        idea {
            module {
                inheritOutputDirs = false
                outputDir = file("$buildDir/classes/java/main/")
                testOutputDir = file("$buildDir/classes/java/test/")
            }
        }

        repositories {
            flatDir {
                dirs "$rootProject.projectDir/libs"
            }
            mavenLocal()
            maven { url "${nexusBaseUrl}/repository/maven-public/" }

        }


    }